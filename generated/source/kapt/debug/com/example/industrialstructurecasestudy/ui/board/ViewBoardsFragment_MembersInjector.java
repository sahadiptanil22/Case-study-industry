// Generated by Dagger (https://dagger.dev).
package com.example.industrialstructurecasestudy.ui.board;

import com.example.industrialstructurecasestudy.repository.RemoteBoardRepository;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ViewBoardsFragment_MembersInjector implements MembersInjector<ViewBoardsFragment> {
  private final Provider<RemoteBoardRepository> boardrepositoryProvider;

  public ViewBoardsFragment_MembersInjector(
      Provider<RemoteBoardRepository> boardrepositoryProvider) {
    this.boardrepositoryProvider = boardrepositoryProvider;
  }

  public static MembersInjector<ViewBoardsFragment> create(
      Provider<RemoteBoardRepository> boardrepositoryProvider) {
    return new ViewBoardsFragment_MembersInjector(boardrepositoryProvider);
  }

  @Override
  public void injectMembers(ViewBoardsFragment instance) {
    injectBoardrepository(instance, boardrepositoryProvider.get());
  }

  @InjectedFieldSignature("com.example.industrialstructurecasestudy.ui.board.ViewBoardsFragment.boardrepository")
  public static void injectBoardrepository(ViewBoardsFragment instance,
      RemoteBoardRepository boardrepository) {
    instance.boardrepository = boardrepository;
  }
}
