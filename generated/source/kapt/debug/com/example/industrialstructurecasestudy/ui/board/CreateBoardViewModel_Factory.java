// Generated by Dagger (https://dagger.dev).
package com.example.industrialstructurecasestudy.ui.board;

import com.example.industrialstructurecasestudy.repository.RemoteBoardRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CreateBoardViewModel_Factory implements Factory<CreateBoardViewModel> {
  private final Provider<RemoteBoardRepository> remoteBoardRepositoryProvider;

  public CreateBoardViewModel_Factory(
      Provider<RemoteBoardRepository> remoteBoardRepositoryProvider) {
    this.remoteBoardRepositoryProvider = remoteBoardRepositoryProvider;
  }

  @Override
  public CreateBoardViewModel get() {
    return newInstance(remoteBoardRepositoryProvider.get());
  }

  public static CreateBoardViewModel_Factory create(
      Provider<RemoteBoardRepository> remoteBoardRepositoryProvider) {
    return new CreateBoardViewModel_Factory(remoteBoardRepositoryProvider);
  }

  public static CreateBoardViewModel newInstance(RemoteBoardRepository remoteBoardRepository) {
    return new CreateBoardViewModel(remoteBoardRepository);
  }
}
